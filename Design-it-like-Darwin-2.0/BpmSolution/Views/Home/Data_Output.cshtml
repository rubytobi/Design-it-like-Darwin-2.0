<h3>Output</h3>
<table id="tableOutput" class="table table-hover">
    <thead>
        <tr>
            <th>Name</th>
            <th>
                <a href="#modalOutput" data-toggle="modal">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </a>
            </th>
        </tr>
    </thead>
    <tbody></tbody>
</table>
<div id="modalOutput" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formDataOutput" }))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Create Output</h4>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-1"></div>
                        <div class="form-horizontal col-md-10">
                            <div class="form-group">
                                <label for="dataOutputObject">Select Object:</label>
                                <select multiple required="required" class="form-control" id="dataOutputObject"></select>
                            </div>

                            <div class="form-group">
                                <label for="dataOutputActivity">Select Activity:</label>
                                <select multiple required="required" class="form-control" id="dataOutputActivity"></select>
                            </div>
                        </div>
                        <div class="col-md-1"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="submitFormDataOutput" class="btn btn-success" value="Create" />
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            }
        </div>

    </div>
</div>
<script>
    $('#formDataOutput').submit(function () {
        if ($(this).valid()) {
            createOutput();
        }

        return false;
    });

    function createOutput() {
        var activities = $('#dataOutputActivity').val();
        var objects = $('#dataOutputObject').val();

        var models = [];

        activities.forEach(function (activity) {
            objects.forEach(function (object) {

                var model = new Object();
                model.activityName = activity;
                model.objectName = object;
                models.push(model);
            });
        });

        $.ajax({
            url: "/api/activityoutputs",
            type: "POST",
            data: JSON.stringify(models),
            contentType: "application/json",
            success: function () {
                loadOutputs();

                $("#modalOutput").modal("hide");
                $('#formDataOutput').trigger("reset");
            },
            error: function () {
                // TODO
            }
        });
    }

    function displayOutput(outputs) {
        $('#tableOutput thead').empty();
        var thead = '<tr><th>Name</th>';
        dataContainer.getObjects().forEach(function (object) {
            thead += '<th>' + object.name + '</th>';
        });
        thead += '<th><a href="#modalOutput" data-toggle="modal"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span></a></th></tr>';
        $('#tableOutput thead').append(thead);

        $('#tableOutput tbody').empty();
        dataContainer.getActivities().forEach(function (activity) {
            var s = '<tr><th>' + activity.name + '</th>';

            dataContainer.getObjects().forEach(function (object) {
                var val = $.grep(outputs,
                    function (value) {
                        return (value.objectName == object.name) && (value.activityName == activity.name);
                    });

                if (val.length > 0) {
                    s += '<td><span class="glyphicon glyphicon-ok text-success" aria-hidden="true"></span>';
                    s += '&nbsp;<a href="javascript:dataDeleteOutput(\'' + val[0].id + '\')"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></a></td>';
                } else {
                    s += '<td></td>';
                }
            });

            $('#tableOutput tbody').append(s);
        });
    }

    function loadOutputs(async = true) {
        $.ajax({
            url: '/api/activityoutputs',
            type: "GET",
            async: async,
            success: function (outputs) {
                displayOutput(outputs);
            }
        });
    }

        function dataDeleteOutput(id) {
            $.ajax({
                url: "/api/activityoutputs/" + id,
                type: "DELETE",
                success: function () {
                    loadAll();
                },
                error: function () {
                    // TODO
                }
            });
        }
</script>
